{"hash":"66320abbf21d21bbbad12c5a900e730d23058a01","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule, Directive, Input, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nclass NgxAccessibilityService {\r\n    constructor() { }\r\n}\r\nNgxAccessibilityService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxAccessibilityService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return []; } });\n\nclass NgxAccessibilityComponent {\r\n    constructor() { }\r\n    ngOnInit() {\r\n    }\r\n}\r\nNgxAccessibilityComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nNgxAccessibilityComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.0\", type: NgxAccessibilityComponent, selector: \"lib-ngx-accessibility\", ngImport: i0, template: `\n    <p>\n      ngx-accessibility works!\n    </p>\n  `, isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'lib-ngx-accessibility',\r\n                    template: `\n    <p>\n      ngx-accessibility works!\n    </p>\n  `,\r\n                    styles: []\r\n                }]\r\n        }], ctorParameters: function () { return []; } });\n\nclass NgxAccessibilityModule {\r\n}\r\nNgxAccessibilityModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxAccessibilityModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityModule, declarations: [NgxAccessibilityComponent], exports: [NgxAccessibilityComponent] });\r\nNgxAccessibilityModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityModule, imports: [[]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        NgxAccessibilityComponent\r\n                    ],\r\n                    imports: [],\r\n                    exports: [\r\n                        NgxAccessibilityComponent\r\n                    ]\r\n                }]\r\n        }] });\n\nclass ButtonAriaLabelDirective {\r\n    constructor(_element) {\r\n        this._element = _element;\r\n    }\r\n    /**\r\n     * Temporary change the value of the button's aria label after the click event\r\n     */\r\n    temporaryChangeAriaLabel() {\r\n        const element = this._element.nativeElement;\r\n        if (!this.temporaryAriaLabel) {\r\n            return;\r\n        }\r\n        element.setAttribute('aria-label', this.temporaryAriaLabel);\r\n        setTimeout(() => element.setAttribute('aria-label', this.mainAriaLabel), 3000);\r\n    }\r\n    ngOnInit() {\r\n        const element = this._element.nativeElement;\r\n        element.setAttribute('aria-label', this.mainAriaLabel);\r\n        element.setAttribute('role', 'button');\r\n    }\r\n}\r\nButtonAriaLabelDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: ButtonAriaLabelDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nButtonAriaLabelDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: ButtonAriaLabelDirective, selector: \"[buttonAriaLabelDirective]\", inputs: { mainAriaLabel: \"mainAriaLabel\", temporaryAriaLabel: \"temporaryAriaLabel\" }, host: { listeners: { \"click\": \"temporaryChangeAriaLabel()\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: ButtonAriaLabelDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[buttonAriaLabelDirective]'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { mainAriaLabel: [{\r\n                type: Input\r\n            }], temporaryAriaLabel: [{\r\n                type: Input\r\n            }], \r\n        /**\r\n         * Temporary change the value of the button's aria label after the click event\r\n         */\r\n        temporaryChangeAriaLabel: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });\n\nclass ButtonAriaLabelModule {\r\n}\r\nButtonAriaLabelModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: ButtonAriaLabelModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nButtonAriaLabelModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: ButtonAriaLabelModule, declarations: [ButtonAriaLabelDirective], imports: [CommonModule], exports: [ButtonAriaLabelDirective] });\r\nButtonAriaLabelModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: ButtonAriaLabelModule, imports: [[\r\n            CommonModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: ButtonAriaLabelModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ButtonAriaLabelDirective\r\n                    ],\r\n                    imports: [\r\n                        CommonModule\r\n                    ],\r\n                    exports: [ButtonAriaLabelDirective]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of ngx-accessibility\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ButtonAriaLabelDirective, ButtonAriaLabelModule, NgxAccessibilityComponent, NgxAccessibilityModule, NgxAccessibilityService };\n//# sourceMappingURL=ngx-accessibility.mjs.map\n","map":{"version":3,"file":"ngx-accessibility.mjs","sources":["../../../projects/ngx-accessibility/src/lib/ngx-accessibility.service.ts","../../../projects/ngx-accessibility/src/lib/ngx-accessibility.component.ts","../../../projects/ngx-accessibility/src/lib/ngx-accessibility.module.ts","../../../projects/ngx-accessibility/src/lib/button-aria-label/button-aria-label.directive.ts","../../../projects/ngx-accessibility/src/lib/button-aria-label/button-aria-label.module.ts","../../../projects/ngx-accessibility/src/public-api.ts","../../../projects/ngx-accessibility/src/ngx-accessibility.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxAccessibilityService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-accessibility',\n  template: `\n    <p>\n      ngx-accessibility works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgxAccessibilityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxAccessibilityComponent } from './ngx-accessibility.component';\n\n\n\n@NgModule({\n  declarations: [\n    NgxAccessibilityComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    NgxAccessibilityComponent\n  ]\n})\nexport class NgxAccessibilityModule { }\n","import { Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[buttonAriaLabelDirective]'\n})\nexport class ButtonAriaLabelDirective implements OnInit {\n\n  // The main aria label of the button\n  @Input() mainAriaLabel!: string;\n\n  // The temporary aria label to be read by the screen reader after the button is clicked\n  @Input() temporaryAriaLabel?: string\n\n  @HostListener( 'click' )\n  /**\n   * Temporary change the value of the button's aria label after the click event\n   */\n  temporaryChangeAriaLabel(): void {\n      const element = this._element.nativeElement as HTMLElement;\n\n      if (!this.temporaryAriaLabel) {\n          return;\n        }\n\n      element.setAttribute('aria-label', this.temporaryAriaLabel);\n      setTimeout(() => element.setAttribute('aria-label', this.mainAriaLabel), 3000);\n    }\n\n  constructor(\n     private _element: ElementRef \n  ) { }\n\n  ngOnInit(): void {\n    const element = this._element.nativeElement as HTMLElement;\n\n    element.setAttribute('aria-label', this.mainAriaLabel);\n    element.setAttribute('role', 'button');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonAriaLabelDirective } from './button-aria-label.directive';\n\n\n\n@NgModule({\n  declarations: [\n    ButtonAriaLabelDirective\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [ ButtonAriaLabelDirective ]\n})\nexport class ButtonAriaLabelModule { }\n","/*\n * Public API Surface of ngx-accessibility\n */\n\nexport * from './lib/ngx-accessibility.service';\nexport * from './lib/ngx-accessibility.component';\nexport * from './lib/ngx-accessibility.module';\n\nexport * from './lib/button-aria-label/button-aria-label.directive';\nexport * from './lib/button-aria-label/button-aria-label.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;MAKa,uBAAuB;IAElC,iBAAiB;;oHAFN,uBAAuB;wHAAvB,uBAAuB,cAFtB,MAAM;2FAEP,uBAAuB;kBAHnC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCQY,yBAAyB;IAEpC,iBAAiB;IAEjB,QAAQ;KACP;;sHALU,yBAAyB;0GAAzB,yBAAyB,6DAR1B;;;;GAIT;2FAIU,yBAAyB;kBAVrC,SAAS;mBAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,QAAQ,EAAE;;;;GAIT;oBACD,MAAM,EAAE,EACP;iBACF;;;MCIY,sBAAsB;;mHAAtB,sBAAsB;oHAAtB,sBAAsB,iBAR/B,yBAAyB,aAKzB,yBAAyB;oHAGhB,sBAAsB,YANxB,EACR;2FAKU,sBAAsB;kBAVlC,QAAQ;mBAAC;oBACR,YAAY,EAAE;wBACZ,yBAAyB;qBAC1B;oBACD,OAAO,EAAE,EACR;oBACD,OAAO,EAAE;wBACP,yBAAyB;qBAC1B;iBACF;;;MCTY,wBAAwB;IAuBnC,YACW,QAAoB;QAApB,aAAQ,GAAR,QAAQ,CAAY;KAC1B;;;;IAbL,wBAAwB;QACpB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAA4B,CAAC;QAE3D,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC1B,OAAO;SACR;QAEH,OAAO,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC5D,UAAU,CAAC,MAAM,OAAO,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC;KAChF;IAMH,QAAQ;QACN,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAA4B,CAAC;QAE3D,OAAO,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACvD,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;KACxC;;qHAhCU,wBAAwB;yGAAxB,wBAAwB;2FAAxB,wBAAwB;kBAHpC,SAAS;mBAAC;oBACT,QAAQ,EAAE,4BAA4B;iBACvC;iGAIU,aAAa;sBAArB,KAAK;gBAGG,kBAAkB;sBAA1B,KAAK;;;;;QAMN,wBAAwB;sBAJvB,YAAY;uBAAE,OAAO;;;MCEX,qBAAqB;;kHAArB,qBAAqB;mHAArB,qBAAqB,iBAP9B,wBAAwB,aAGxB,YAAY,aAEH,wBAAwB;mHAExB,qBAAqB,YALvB;YACP,YAAY;SACb;2FAGU,qBAAqB;kBATjC,QAAQ;mBAAC;oBACR,YAAY,EAAE;wBACZ,wBAAwB;qBACzB;oBACD,OAAO,EAAE;wBACP,YAAY;qBACb;oBACD,OAAO,EAAE,CAAE,wBAAwB,CAAE;iBACtC;;;ACdD;;;;ACAA;;;;;;"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule, Directive, Input, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nclass NgxAccessibilityService {\r\n    constructor() { }\r\n}\r\nNgxAccessibilityService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nNgxAccessibilityService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root'\r\n                }]\r\n        }], ctorParameters: function () { return []; } });\n\nclass NgxAccessibilityComponent {\r\n    constructor() { }\r\n    ngOnInit() {\r\n    }\r\n}\r\nNgxAccessibilityComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nNgxAccessibilityComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.0\", type: NgxAccessibilityComponent, selector: \"lib-ngx-accessibility\", ngImport: i0, template: `\n    <p>\n      ngx-accessibility works!\n    </p>\n  `, isInline: true });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'lib-ngx-accessibility',\r\n                    template: `\n    <p>\n      ngx-accessibility works!\n    </p>\n  `,\r\n                    styles: []\r\n                }]\r\n        }], ctorParameters: function () { return []; } });\n\nclass NgxAccessibilityModule {\r\n}\r\nNgxAccessibilityModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxAccessibilityModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityModule, declarations: [NgxAccessibilityComponent], exports: [NgxAccessibilityComponent] });\r\nNgxAccessibilityModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityModule, imports: [[]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: NgxAccessibilityModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        NgxAccessibilityComponent\r\n                    ],\r\n                    imports: [],\r\n                    exports: [\r\n                        NgxAccessibilityComponent\r\n                    ]\r\n                }]\r\n        }] });\n\nclass ButtonAriaLabelDirective {\r\n    constructor(_element) {\r\n        this._element = _element;\r\n    }\r\n    /**\r\n     * Temporary change the value of the button's aria label after the click event\r\n     */\r\n    temporaryChangeAriaLabel() {\r\n        const element = this._element.nativeElement;\r\n        if (!this.temporaryAriaLabel) {\r\n            return;\r\n        }\r\n        element.setAttribute('aria-label', this.temporaryAriaLabel);\r\n        setTimeout(() => element.setAttribute('aria-label', this.mainAriaLabel), 3000);\r\n    }\r\n    ngOnInit() {\r\n        const element = this._element.nativeElement;\r\n        element.setAttribute('aria-label', this.mainAriaLabel);\r\n        element.setAttribute('role', 'button');\r\n    }\r\n}\r\nButtonAriaLabelDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: ButtonAriaLabelDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nButtonAriaLabelDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: ButtonAriaLabelDirective, selector: \"[buttonAriaLabelDirective]\", inputs: { mainAriaLabel: \"mainAriaLabel\", temporaryAriaLabel: \"temporaryAriaLabel\" }, host: { listeners: { \"click\": \"temporaryChangeAriaLabel()\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: ButtonAriaLabelDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[buttonAriaLabelDirective]'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { mainAriaLabel: [{\r\n                type: Input\r\n            }], temporaryAriaLabel: [{\r\n                type: Input\r\n            }],\r\n        /**\r\n         * Temporary change the value of the button's aria label after the click event\r\n         */\r\n        temporaryChangeAriaLabel: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });\n\nclass ButtonAriaLabelModule {\r\n}\r\nButtonAriaLabelModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: ButtonAriaLabelModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nButtonAriaLabelModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: ButtonAriaLabelModule, declarations: [ButtonAriaLabelDirective], imports: [CommonModule], exports: [ButtonAriaLabelDirective] });\r\nButtonAriaLabelModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: ButtonAriaLabelModule, imports: [[\r\n            CommonModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: ButtonAriaLabelModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        ButtonAriaLabelDirective\r\n                    ],\r\n                    imports: [\r\n                        CommonModule\r\n                    ],\r\n                    exports: [ButtonAriaLabelDirective]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of ngx-accessibility\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ButtonAriaLabelDirective, ButtonAriaLabelModule, NgxAccessibilityComponent, NgxAccessibilityModule, NgxAccessibilityService };\n//# sourceMappingURL=ngx-accessibility.mjs.map\n","map":{"version":3,"file":"ngx-accessibility.mjs","sources":["../../../projects/ngx-accessibility/src/lib/ngx-accessibility.service.ts","../../../projects/ngx-accessibility/src/lib/ngx-accessibility.component.ts","../../../projects/ngx-accessibility/src/lib/ngx-accessibility.module.ts","../../../projects/ngx-accessibility/src/lib/button-aria-label/button-aria-label.directive.ts","../../../projects/ngx-accessibility/src/lib/button-aria-label/button-aria-label.module.ts","../../../projects/ngx-accessibility/src/public-api.ts","../../../projects/ngx-accessibility/src/ngx-accessibility.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxAccessibilityService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-accessibility',\n  template: `\n    <p>\n      ngx-accessibility works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgxAccessibilityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxAccessibilityComponent } from './ngx-accessibility.component';\n\n\n\n@NgModule({\n  declarations: [\n    NgxAccessibilityComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    NgxAccessibilityComponent\n  ]\n})\nexport class NgxAccessibilityModule { }\n","import { Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[buttonAriaLabelDirective]'\n})\nexport class ButtonAriaLabelDirective implements OnInit {\n\n  // The main aria label of the button\n  @Input() mainAriaLabel!: string;\n\n  // The temporary aria label to be read by the screen reader after the button is clicked\n  @Input() temporaryAriaLabel?: string\n\n  @HostListener( 'click' )\n  /**\n   * Temporary change the value of the button's aria label after the click event\n   */\n  temporaryChangeAriaLabel(): void {\n      const element = this._element.nativeElement as HTMLElement;\n\n      if (!this.temporaryAriaLabel) {\n          return;\n        }\n\n      element.setAttribute('aria-label', this.temporaryAriaLabel);\n      setTimeout(() => element.setAttribute('aria-label', this.mainAriaLabel), 3000);\n    }\n\n  constructor(\n     private _element: ElementRef \n  ) { }\n\n  ngOnInit(): void {\n    const element = this._element.nativeElement as HTMLElement;\n\n    element.setAttribute('aria-label', this.mainAriaLabel);\n    element.setAttribute('role', 'button');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonAriaLabelDirective } from './button-aria-label.directive';\n\n\n\n@NgModule({\n  declarations: [\n    ButtonAriaLabelDirective\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [ ButtonAriaLabelDirective ]\n})\nexport class ButtonAriaLabelModule { }\n","/*\n * Public API Surface of ngx-accessibility\n */\n\nexport * from './lib/ngx-accessibility.service';\nexport * from './lib/ngx-accessibility.component';\nexport * from './lib/ngx-accessibility.module';\n\nexport * from './lib/button-aria-label/button-aria-label.directive';\nexport * from './lib/button-aria-label/button-aria-label.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;MAKa,uBAAuB;IAElC,iBAAiB;;oHAFN,uBAAuB;wHAAvB,uBAAuB,cAFtB,MAAM;2FAEP,uBAAuB;kBAHnC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCQY,yBAAyB;IAEpC,iBAAiB;IAEjB,QAAQ;KACP;;sHALU,yBAAyB;0GAAzB,yBAAyB,6DAR1B;;;;GAIT;2FAIU,yBAAyB;kBAVrC,SAAS;mBAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,QAAQ,EAAE;;;;GAIT;oBACD,MAAM,EAAE,EACP;iBACF;;;MCIY,sBAAsB;;mHAAtB,sBAAsB;oHAAtB,sBAAsB,iBAR/B,yBAAyB,aAKzB,yBAAyB;oHAGhB,sBAAsB,YANxB,EACR;2FAKU,sBAAsB;kBAVlC,QAAQ;mBAAC;oBACR,YAAY,EAAE;wBACZ,yBAAyB;qBAC1B;oBACD,OAAO,EAAE,EACR;oBACD,OAAO,EAAE;wBACP,yBAAyB;qBAC1B;iBACF;;;MCTY,wBAAwB;IAuBnC,YACW,QAAoB;QAApB,aAAQ,GAAR,QAAQ,CAAY;KAC1B;;;;IAbL,wBAAwB;QACpB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAA4B,CAAC;QAE3D,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC1B,OAAO;SACR;QAEH,OAAO,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC5D,UAAU,CAAC,MAAM,OAAO,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC;KAChF;IAMH,QAAQ;QACN,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAA4B,CAAC;QAE3D,OAAO,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QACvD,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;KACxC;;qHAhCU,wBAAwB;yGAAxB,wBAAwB;2FAAxB,wBAAwB;kBAHpC,SAAS;mBAAC;oBACT,QAAQ,EAAE,4BAA4B;iBACvC;iGAIU,aAAa;sBAArB,KAAK;gBAGG,kBAAkB;sBAA1B,KAAK;;;;;QAMN,wBAAwB;sBAJvB,YAAY;uBAAE,OAAO;;;MCEX,qBAAqB;;kHAArB,qBAAqB;mHAArB,qBAAqB,iBAP9B,wBAAwB,aAGxB,YAAY,aAEH,wBAAwB;mHAExB,qBAAqB,YALvB;YACP,YAAY;SACb;2FAGU,qBAAqB;kBATjC,QAAQ;mBAAC;oBACR,YAAY,EAAE;wBACZ,wBAAwB;qBACzB;oBACD,OAAO,EAAE;wBACP,YAAY;qBACb;oBACD,OAAO,EAAE,CAAE,wBAAwB,CAAE;iBACtC;;;ACdD;;;;ACAA;;;;;;"}}}